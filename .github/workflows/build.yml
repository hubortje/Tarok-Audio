name: Build web app

on:
  push:
    branches: main

jobs:
  build-apk:
    name: "[frontend] Android build"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tarok
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: beta
      - name: Set version number
        run: sed -i "s/RELEASE = \"DEBUG\"/RELEASE = \"${GITHUB_SHA}\"/g" lib/constants.dart
      - run: flutter pub upgrade
      - run: flutter build apk --verbose
      - uses: actions/upload-artifact@v3
        with:
          name: android_app
          path: tarok/build/app/outputs/apk/release/app-release.apk
  build-windows:
    name: "[frontend] Windows build"
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./tarok
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: beta
      - run: flutter pub upgrade
      - run: flutter pub get
      - run: flutter config --enable-windows-desktop
      - run: flutter doctor --verbose
      - run: flutter devices
      - run: flutter build windows --verbose
      - uses: actions/upload-artifact@v3
        with:
          name: windows_app
          path: tarok\build\windows\runner\Release\
  build-linux:
    name: "[frontend] Linux build"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tarok
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: beta
      - name: Install build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libsecret-1-dev libjsoncpp-dev
      - name: Set version number
        run: sed -i "s/RELEASE = \"DEBUG\"/RELEASE = \"${GITHUB_SHA}\"/g" lib/constants.dart
      - name: Get dependencies
        run: flutter pub upgrade
      - name: Enable Linux desktop for building
        run: flutter config --enable-linux-desktop
      - name: Run flutter doctor for inspection
        run: flutter doctor -v
      - name: Run flutter devices for getting all devices info
        run: flutter devices
      - name: Build Linux app
        run: flutter build linux --verbose
      - run: ls build/linux/x64/release/bundle
      - uses: actions/upload-artifact@v3
        with:
          name: linux_app
          path: tarok/build/linux/x64/release/bundle
  build-web:
    name: "[frontend] JavaScript build"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tarok
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: beta
      - name: Set version number
        run: sed -i "s/RELEASE = \"DEBUG\"/RELEASE = \"${GITHUB_SHA}\"/g" lib/constants.dart
      - run: flutter pub upgrade
      - run: flutter build web --verbose --no-tree-shake-icons
      - uses: actions/upload-artifact@v3
        with:
          name: web_app
          path: tarok/build/web
  build-web-docker:
    name: "[frontend] JavaScript container build"
    needs: build-web
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tarok
    steps:
      - uses: actions/checkout@v3
      - name: Get Docker version
        run: docker --version
      - name: Set version number
        run: sed -i "s/RELEASE = \"DEBUG\"/RELEASE = \"${GITHUB_SHA}\"/g" lib/constants.dart
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          registry: "ghcr.io"
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          file: "./tarok/Dockerfile"
          tags: ghcr.io/mytja/tarok/frontend:latest
          push: true

  server-build-linux:
    name: "[backend] Linux build"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - uses: dart-lang/setup-dart@v1
      - name: Pull StockŠkis dependencies
        run: dart pub get
        working-directory: ./stockskis_cli
      - name: Build StockŠkis & StockŠkis CLI
        run: ./build.sh
        working-directory: ./stockskis_cli
      - name: Move StockŠkis CLI
        run: mkdir output && mv stockskis output/
      - name: Get current Go version
        run: go version
      - name: Get Go dependencies
        run: go mod download
      - name: Set env
        run: go env -w GOFLAGS=-mod=mod
      - name: Build app
        run: go build -v -o output/backend .
      - uses: actions/upload-artifact@v3
        with:
          name: backend-linux
          path: backend/output
  server-docker:
    name: "[backend] Linux container build"
    needs: server-build-linux
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-linux
      - name: Get Docker version
        run: docker --version
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          registry: "ghcr.io"
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          file: "./backend/Dockerfile"
          tags: ghcr.io/mytja/tarok/backend:latest
          push: true
