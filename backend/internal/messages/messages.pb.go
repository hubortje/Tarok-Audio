// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.6
// source: messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type Disconnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type Receive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Receive) Reset() {
	*x = Receive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receive) ProtoMessage() {}

func (x *Receive) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receive.ProtoReflect.Descriptor instead.
func (*Receive) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

type Send struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Send) Reset() {
	*x = Send{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send) ProtoMessage() {}

func (x *Send) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send.ProtoReflect.Descriptor instead.
func (*Send) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

type ClearDesk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearDesk) Reset() {
	*x = ClearDesk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDesk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDesk) ProtoMessage() {}

func (x *ClearDesk) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDesk.ProtoReflect.Descriptor instead.
func (*ClearDesk) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

type Leave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Leave) Reset() {
	*x = Leave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leave) ProtoMessage() {}

func (x *Leave) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leave.ProtoReflect.Descriptor instead.
func (*Leave) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

type GameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*GameEnd_Results
	//	*GameEnd_Request
	Type isGameEnd_Type `protobuf_oneof:"type"`
}

func (x *GameEnd) Reset() {
	*x = GameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEnd) ProtoMessage() {}

func (x *GameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEnd.ProtoReflect.Descriptor instead.
func (*GameEnd) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (m *GameEnd) GetType() isGameEnd_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GameEnd) GetResults() *Results {
	if x, ok := x.GetType().(*GameEnd_Results); ok {
		return x.Results
	}
	return nil
}

func (x *GameEnd) GetRequest() *Request {
	if x, ok := x.GetType().(*GameEnd_Request); ok {
		return x.Request
	}
	return nil
}

type isGameEnd_Type interface {
	isGameEnd_Type()
}

type GameEnd_Results struct {
	Results *Results `protobuf:"bytes,1,opt,name=results,proto3,oneof"`
}

type GameEnd_Request struct {
	Request *Request `protobuf:"bytes,2,opt,name=request,proto3,oneof"`
}

func (*GameEnd_Results) isGameEnd_Type() {}

func (*GameEnd_Request) isGameEnd_Type() {}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating int32 `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Connection_Join
	//	*Connection_Disconnect
	//	*Connection_Leave
	Type isConnection_Type `protobuf_oneof:"type"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *Connection) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (m *Connection) GetType() isConnection_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Connection) GetJoin() *Connect {
	if x, ok := x.GetType().(*Connection_Join); ok {
		return x.Join
	}
	return nil
}

func (x *Connection) GetDisconnect() *Disconnect {
	if x, ok := x.GetType().(*Connection_Disconnect); ok {
		return x.Disconnect
	}
	return nil
}

func (x *Connection) GetLeave() *Leave {
	if x, ok := x.GetType().(*Connection_Leave); ok {
		return x.Leave
	}
	return nil
}

type isConnection_Type interface {
	isConnection_Type()
}

type Connection_Join struct {
	Join *Connect `protobuf:"bytes,3,opt,name=join,proto3,oneof"`
}

type Connection_Disconnect struct {
	Disconnect *Disconnect `protobuf:"bytes,4,opt,name=disconnect,proto3,oneof"`
}

type Connection_Leave struct {
	Leave *Leave `protobuf:"bytes,5,opt,name=leave,proto3,oneof"`
}

func (*Connection_Join) isConnection_Type() {}

func (*Connection_Disconnect) isConnection_Type() {}

func (*Connection_Leave) isConnection_Type() {}

type Licitiranje struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Licitiranje) Reset() {
	*x = Licitiranje{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Licitiranje) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Licitiranje) ProtoMessage() {}

func (x *Licitiranje) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Licitiranje.ProtoReflect.Descriptor instead.
func (*Licitiranje) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *Licitiranje) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type LicitiranjeStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LicitiranjeStart) Reset() {
	*x = LicitiranjeStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicitiranjeStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicitiranjeStart) ProtoMessage() {}

func (x *LicitiranjeStart) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicitiranjeStart.ProtoReflect.Descriptor instead.
func (*LicitiranjeStart) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Card_Receive
	//	*Card_Send
	//	*Card_Request
	Type isCard_Type `protobuf_oneof:"type"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (m *Card) GetType() isCard_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Card) GetReceive() *Receive {
	if x, ok := x.GetType().(*Card_Receive); ok {
		return x.Receive
	}
	return nil
}

func (x *Card) GetSend() *Send {
	if x, ok := x.GetType().(*Card_Send); ok {
		return x.Send
	}
	return nil
}

func (x *Card) GetRequest() *Request {
	if x, ok := x.GetType().(*Card_Request); ok {
		return x.Request
	}
	return nil
}

type isCard_Type interface {
	isCard_Type()
}

type Card_Receive struct {
	Receive *Receive `protobuf:"bytes,3,opt,name=receive,proto3,oneof"`
}

type Card_Send struct {
	Send *Send `protobuf:"bytes,4,opt,name=send,proto3,oneof"`
}

type Card_Request struct {
	Request *Request `protobuf:"bytes,5,opt,name=request,proto3,oneof"`
}

func (*Card_Receive) isCard_Type() {}

func (*Card_Send) isCard_Type() {}

func (*Card_Request) isCard_Type() {}

type GameStartCountdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countdown int32 `protobuf:"varint,1,opt,name=countdown,proto3" json:"countdown,omitempty"`
}

func (x *GameStartCountdown) Reset() {
	*x = GameStartCountdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStartCountdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartCountdown) ProtoMessage() {}

func (x *GameStartCountdown) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartCountdown.ProtoReflect.Descriptor instead.
func (*GameStartCountdown) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *GameStartCountdown) GetCountdown() int32 {
	if x != nil {
		return x.Countdown
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Position int32  `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type ResultsUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	Playing        bool    `protobuf:"varint,2,opt,name=playing,proto3" json:"playing,omitempty"`
	Points         int32   `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`
	Trula          int32   `protobuf:"varint,4,opt,name=trula,proto3" json:"trula,omitempty"`
	Pagat          int32   `protobuf:"varint,5,opt,name=pagat,proto3" json:"pagat,omitempty"`
	Igra           int32   `protobuf:"varint,6,opt,name=igra,proto3" json:"igra,omitempty"`
	Razlika        int32   `protobuf:"varint,7,opt,name=razlika,proto3" json:"razlika,omitempty"`
	Kralj          int32   `protobuf:"varint,8,opt,name=kralj,proto3" json:"kralj,omitempty"`
	Kralji         int32   `protobuf:"varint,9,opt,name=kralji,proto3" json:"kralji,omitempty"`
	KontraPagat    int32   `protobuf:"varint,10,opt,name=kontra_pagat,json=kontraPagat,proto3" json:"kontra_pagat,omitempty"`
	KontraIgra     int32   `protobuf:"varint,11,opt,name=kontra_igra,json=kontraIgra,proto3" json:"kontra_igra,omitempty"`
	KontraKralj    int32   `protobuf:"varint,12,opt,name=kontra_kralj,json=kontraKralj,proto3" json:"kontra_kralj,omitempty"`
	Mondfang       bool    `protobuf:"varint,13,opt,name=mondfang,proto3" json:"mondfang,omitempty"`
	ShowGamemode   bool    `protobuf:"varint,14,opt,name=show_gamemode,json=showGamemode,proto3" json:"show_gamemode,omitempty"`
	ShowDifference bool    `protobuf:"varint,15,opt,name=show_difference,json=showDifference,proto3" json:"show_difference,omitempty"`
	ShowKralj      bool    `protobuf:"varint,16,opt,name=show_kralj,json=showKralj,proto3" json:"show_kralj,omitempty"`
	ShowPagat      bool    `protobuf:"varint,17,opt,name=show_pagat,json=showPagat,proto3" json:"show_pagat,omitempty"`
	ShowKralji     bool    `protobuf:"varint,18,opt,name=show_kralji,json=showKralji,proto3" json:"show_kralji,omitempty"`
	ShowTrula      bool    `protobuf:"varint,19,opt,name=show_trula,json=showTrula,proto3" json:"show_trula,omitempty"`
	Radelc         bool    `protobuf:"varint,20,opt,name=radelc,proto3" json:"radelc,omitempty"`
}

func (x *ResultsUser) Reset() {
	*x = ResultsUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsUser) ProtoMessage() {}

func (x *ResultsUser) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsUser.ProtoReflect.Descriptor instead.
func (*ResultsUser) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *ResultsUser) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ResultsUser) GetPlaying() bool {
	if x != nil {
		return x.Playing
	}
	return false
}

func (x *ResultsUser) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *ResultsUser) GetTrula() int32 {
	if x != nil {
		return x.Trula
	}
	return 0
}

func (x *ResultsUser) GetPagat() int32 {
	if x != nil {
		return x.Pagat
	}
	return 0
}

func (x *ResultsUser) GetIgra() int32 {
	if x != nil {
		return x.Igra
	}
	return 0
}

func (x *ResultsUser) GetRazlika() int32 {
	if x != nil {
		return x.Razlika
	}
	return 0
}

func (x *ResultsUser) GetKralj() int32 {
	if x != nil {
		return x.Kralj
	}
	return 0
}

func (x *ResultsUser) GetKralji() int32 {
	if x != nil {
		return x.Kralji
	}
	return 0
}

func (x *ResultsUser) GetKontraPagat() int32 {
	if x != nil {
		return x.KontraPagat
	}
	return 0
}

func (x *ResultsUser) GetKontraIgra() int32 {
	if x != nil {
		return x.KontraIgra
	}
	return 0
}

func (x *ResultsUser) GetKontraKralj() int32 {
	if x != nil {
		return x.KontraKralj
	}
	return 0
}

func (x *ResultsUser) GetMondfang() bool {
	if x != nil {
		return x.Mondfang
	}
	return false
}

func (x *ResultsUser) GetShowGamemode() bool {
	if x != nil {
		return x.ShowGamemode
	}
	return false
}

func (x *ResultsUser) GetShowDifference() bool {
	if x != nil {
		return x.ShowDifference
	}
	return false
}

func (x *ResultsUser) GetShowKralj() bool {
	if x != nil {
		return x.ShowKralj
	}
	return false
}

func (x *ResultsUser) GetShowPagat() bool {
	if x != nil {
		return x.ShowPagat
	}
	return false
}

func (x *ResultsUser) GetShowKralji() bool {
	if x != nil {
		return x.ShowKralji
	}
	return false
}

func (x *ResultsUser) GetShowTrula() bool {
	if x != nil {
		return x.ShowTrula
	}
	return false
}

func (x *ResultsUser) GetRadelc() bool {
	if x != nil {
		return x.Radelc
	}
	return false
}

type Stih struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card              []*Card `protobuf:"bytes,1,rep,name=card,proto3" json:"card,omitempty"`
	Worth             float32 `protobuf:"fixed32,2,opt,name=worth,proto3" json:"worth,omitempty"`
	PickedUpByPlaying bool    `protobuf:"varint,3,opt,name=pickedUpByPlaying,proto3" json:"pickedUpByPlaying,omitempty"`
	PickedUpBy        string  `protobuf:"bytes,4,opt,name=pickedUpBy,proto3" json:"pickedUpBy,omitempty"`
}

func (x *Stih) Reset() {
	*x = Stih{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stih) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stih) ProtoMessage() {}

func (x *Stih) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stih.ProtoReflect.Descriptor instead.
func (*Stih) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *Stih) GetCard() []*Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *Stih) GetWorth() float32 {
	if x != nil {
		return x.Worth
	}
	return 0
}

func (x *Stih) GetPickedUpByPlaying() bool {
	if x != nil {
		return x.PickedUpByPlaying
	}
	return false
}

func (x *Stih) GetPickedUpBy() string {
	if x != nil {
		return x.PickedUpBy
	}
	return ""
}

type Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*ResultsUser `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	Stih []*Stih        `protobuf:"bytes,2,rep,name=stih,proto3" json:"stih,omitempty"`
}

func (x *Results) Reset() {
	*x = Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Results) ProtoMessage() {}

func (x *Results) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Results.ProtoReflect.Descriptor instead.
func (*Results) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *Results) GetUser() []*ResultsUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Results) GetStih() []*Stih {
	if x != nil {
		return x.Stih
	}
	return nil
}

type GameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *GameStart) Reset() {
	*x = GameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStart) ProtoMessage() {}

func (x *GameStart) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStart.ProtoReflect.Descriptor instead.
func (*GameStart) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *GameStart) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *UserList) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

type KingSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card string `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// Types that are assignable to Type:
	//
	//	*KingSelection_Request
	//	*KingSelection_Send
	//	*KingSelection_Notification
	Type isKingSelection_Type `protobuf_oneof:"type"`
}

func (x *KingSelection) Reset() {
	*x = KingSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KingSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KingSelection) ProtoMessage() {}

func (x *KingSelection) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KingSelection.ProtoReflect.Descriptor instead.
func (*KingSelection) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

func (x *KingSelection) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (m *KingSelection) GetType() isKingSelection_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *KingSelection) GetRequest() *Request {
	if x, ok := x.GetType().(*KingSelection_Request); ok {
		return x.Request
	}
	return nil
}

func (x *KingSelection) GetSend() *Send {
	if x, ok := x.GetType().(*KingSelection_Send); ok {
		return x.Send
	}
	return nil
}

func (x *KingSelection) GetNotification() *Notification {
	if x, ok := x.GetType().(*KingSelection_Notification); ok {
		return x.Notification
	}
	return nil
}

type isKingSelection_Type interface {
	isKingSelection_Type()
}

type KingSelection_Request struct {
	Request *Request `protobuf:"bytes,2,opt,name=request,proto3,oneof"`
}

type KingSelection_Send struct {
	Send *Send `protobuf:"bytes,3,opt,name=send,proto3,oneof"`
}

type KingSelection_Notification struct {
	Notification *Notification `protobuf:"bytes,4,opt,name=notification,proto3,oneof"`
}

func (*KingSelection_Request) isKingSelection_Type() {}

func (*KingSelection_Send) isKingSelection_Type() {}

func (*KingSelection_Notification) isKingSelection_Type() {}

type TalonSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part int32 `protobuf:"varint,1,opt,name=part,proto3" json:"part,omitempty"`
	// Types that are assignable to Type:
	//
	//	*TalonSelection_Request
	//	*TalonSelection_Send
	//	*TalonSelection_Notification
	Type isTalonSelection_Type `protobuf_oneof:"type"`
}

func (x *TalonSelection) Reset() {
	*x = TalonSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalonSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalonSelection) ProtoMessage() {}

func (x *TalonSelection) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalonSelection.ProtoReflect.Descriptor instead.
func (*TalonSelection) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *TalonSelection) GetPart() int32 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (m *TalonSelection) GetType() isTalonSelection_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TalonSelection) GetRequest() *Request {
	if x, ok := x.GetType().(*TalonSelection_Request); ok {
		return x.Request
	}
	return nil
}

func (x *TalonSelection) GetSend() *Send {
	if x, ok := x.GetType().(*TalonSelection_Send); ok {
		return x.Send
	}
	return nil
}

func (x *TalonSelection) GetNotification() *Notification {
	if x, ok := x.GetType().(*TalonSelection_Notification); ok {
		return x.Notification
	}
	return nil
}

type isTalonSelection_Type interface {
	isTalonSelection_Type()
}

type TalonSelection_Request struct {
	Request *Request `protobuf:"bytes,2,opt,name=request,proto3,oneof"`
}

type TalonSelection_Send struct {
	Send *Send `protobuf:"bytes,3,opt,name=send,proto3,oneof"`
}

type TalonSelection_Notification struct {
	Notification *Notification `protobuf:"bytes,4,opt,name=notification,proto3,oneof"`
}

func (*TalonSelection_Request) isTalonSelection_Type() {}

func (*TalonSelection_Send) isTalonSelection_Type() {}

func (*TalonSelection_Notification) isTalonSelection_Type() {}

type Stash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card   []*Card `protobuf:"bytes,1,rep,name=card,proto3" json:"card,omitempty"`
	Length int32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Stash_Request
	//	*Stash_Send
	//	*Stash_Notification
	Type isStash_Type `protobuf_oneof:"type"`
}

func (x *Stash) Reset() {
	*x = Stash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stash) ProtoMessage() {}

func (x *Stash) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stash.ProtoReflect.Descriptor instead.
func (*Stash) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *Stash) GetCard() []*Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *Stash) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (m *Stash) GetType() isStash_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Stash) GetRequest() *Request {
	if x, ok := x.GetType().(*Stash_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Stash) GetSend() *Send {
	if x, ok := x.GetType().(*Stash_Send); ok {
		return x.Send
	}
	return nil
}

func (x *Stash) GetNotification() *Notification {
	if x, ok := x.GetType().(*Stash_Notification); ok {
		return x.Notification
	}
	return nil
}

type isStash_Type interface {
	isStash_Type()
}

type Stash_Request struct {
	Request *Request `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type Stash_Send struct {
	Send *Send `protobuf:"bytes,4,opt,name=send,proto3,oneof"`
}

type Stash_Notification struct {
	Notification *Notification `protobuf:"bytes,5,opt,name=notification,proto3,oneof"`
}

func (*Stash_Request) isStash_Type() {}

func (*Stash_Send) isStash_Type() {}

func (*Stash_Notification) isStash_Type() {}

type Radelci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Radleci int32 `protobuf:"varint,1,opt,name=radleci,proto3" json:"radleci,omitempty"`
}

func (x *Radelci) Reset() {
	*x = Radelci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Radelci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Radelci) ProtoMessage() {}

func (x *Radelci) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Radelci.ProtoReflect.Descriptor instead.
func (*Radelci) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *Radelci) GetRadleci() int32 {
	if x != nil {
		return x.Radleci
	}
	return 0
}

type StartPredictions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KraljUltimoKontra bool `protobuf:"varint,1,opt,name=kralj_ultimo_kontra,json=kraljUltimoKontra,proto3" json:"kralj_ultimo_kontra,omitempty"`
	// bool trula_kontra = 2;
	// bool kralji_kontra = 3;
	PagatUltimoKontra bool `protobuf:"varint,4,opt,name=pagat_ultimo_kontra,json=pagatUltimoKontra,proto3" json:"pagat_ultimo_kontra,omitempty"`
	IgraKontra        bool `protobuf:"varint,5,opt,name=igra_kontra,json=igraKontra,proto3" json:"igra_kontra,omitempty"`
	ValatKontra       bool `protobuf:"varint,6,opt,name=valat_kontra,json=valatKontra,proto3" json:"valat_kontra,omitempty"`
	BarvniValatKontra bool `protobuf:"varint,7,opt,name=barvni_valat_kontra,json=barvniValatKontra,proto3" json:"barvni_valat_kontra,omitempty"`
	PagatUltimo       bool `protobuf:"varint,8,opt,name=pagat_ultimo,json=pagatUltimo,proto3" json:"pagat_ultimo,omitempty"`
	Trula             bool `protobuf:"varint,9,opt,name=trula,proto3" json:"trula,omitempty"`
	Kralji            bool `protobuf:"varint,10,opt,name=kralji,proto3" json:"kralji,omitempty"`
	KraljUltimo       bool `protobuf:"varint,11,opt,name=kralj_ultimo,json=kraljUltimo,proto3" json:"kralj_ultimo,omitempty"`
	Valat             bool `protobuf:"varint,12,opt,name=valat,proto3" json:"valat,omitempty"`
	BarvniValat       bool `protobuf:"varint,13,opt,name=barvni_valat,json=barvniValat,proto3" json:"barvni_valat,omitempty"`
}

func (x *StartPredictions) Reset() {
	*x = StartPredictions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPredictions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPredictions) ProtoMessage() {}

func (x *StartPredictions) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPredictions.ProtoReflect.Descriptor instead.
func (*StartPredictions) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *StartPredictions) GetKraljUltimoKontra() bool {
	if x != nil {
		return x.KraljUltimoKontra
	}
	return false
}

func (x *StartPredictions) GetPagatUltimoKontra() bool {
	if x != nil {
		return x.PagatUltimoKontra
	}
	return false
}

func (x *StartPredictions) GetIgraKontra() bool {
	if x != nil {
		return x.IgraKontra
	}
	return false
}

func (x *StartPredictions) GetValatKontra() bool {
	if x != nil {
		return x.ValatKontra
	}
	return false
}

func (x *StartPredictions) GetBarvniValatKontra() bool {
	if x != nil {
		return x.BarvniValatKontra
	}
	return false
}

func (x *StartPredictions) GetPagatUltimo() bool {
	if x != nil {
		return x.PagatUltimo
	}
	return false
}

func (x *StartPredictions) GetTrula() bool {
	if x != nil {
		return x.Trula
	}
	return false
}

func (x *StartPredictions) GetKralji() bool {
	if x != nil {
		return x.Kralji
	}
	return false
}

func (x *StartPredictions) GetKraljUltimo() bool {
	if x != nil {
		return x.KraljUltimo
	}
	return false
}

func (x *StartPredictions) GetValat() bool {
	if x != nil {
		return x.Valat
	}
	return false
}

func (x *StartPredictions) GetBarvniValat() bool {
	if x != nil {
		return x.BarvniValat
	}
	return false
}

type Predictions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KraljUltimo          *User `protobuf:"bytes,1,opt,name=kralj_ultimo,json=kraljUltimo,proto3" json:"kralj_ultimo,omitempty"`
	KraljUltimoKontra    int32 `protobuf:"varint,2,opt,name=kralj_ultimo_kontra,json=kraljUltimoKontra,proto3" json:"kralj_ultimo_kontra,omitempty"`
	KraljUltimoKontraDal *User `protobuf:"bytes,3,opt,name=kralj_ultimo_kontra_dal,json=kraljUltimoKontraDal,proto3" json:"kralj_ultimo_kontra_dal,omitempty"`
	Trula                *User `protobuf:"bytes,4,opt,name=trula,proto3" json:"trula,omitempty"`
	Kralji               *User `protobuf:"bytes,7,opt,name=kralji,proto3" json:"kralji,omitempty"`
	PagatUltimo          *User `protobuf:"bytes,10,opt,name=pagat_ultimo,json=pagatUltimo,proto3" json:"pagat_ultimo,omitempty"`
	PagatUltimoKontra    int32 `protobuf:"varint,11,opt,name=pagat_ultimo_kontra,json=pagatUltimoKontra,proto3" json:"pagat_ultimo_kontra,omitempty"`
	PagatUltimoKontraDal *User `protobuf:"bytes,12,opt,name=pagat_ultimo_kontra_dal,json=pagatUltimoKontraDal,proto3" json:"pagat_ultimo_kontra_dal,omitempty"`
	Igra                 *User `protobuf:"bytes,13,opt,name=igra,proto3" json:"igra,omitempty"`
	IgraKontra           int32 `protobuf:"varint,14,opt,name=igra_kontra,json=igraKontra,proto3" json:"igra_kontra,omitempty"`
	IgraKontraDal        *User `protobuf:"bytes,15,opt,name=igra_kontra_dal,json=igraKontraDal,proto3" json:"igra_kontra_dal,omitempty"`
	Valat                *User `protobuf:"bytes,16,opt,name=valat,proto3" json:"valat,omitempty"`
	ValatKontra          int32 `protobuf:"varint,17,opt,name=valat_kontra,json=valatKontra,proto3" json:"valat_kontra,omitempty"`
	ValatKontraDal       *User `protobuf:"bytes,18,opt,name=valat_kontra_dal,json=valatKontraDal,proto3" json:"valat_kontra_dal,omitempty"`
	BarvniValat          *User `protobuf:"bytes,19,opt,name=barvni_valat,json=barvniValat,proto3" json:"barvni_valat,omitempty"`
	BarvniValatKontra    int32 `protobuf:"varint,20,opt,name=barvni_valat_kontra,json=barvniValatKontra,proto3" json:"barvni_valat_kontra,omitempty"`
	BarvniValatKontraDal *User `protobuf:"bytes,21,opt,name=barvni_valat_kontra_dal,json=barvniValatKontraDal,proto3" json:"barvni_valat_kontra_dal,omitempty"`
	Gamemode             int32 `protobuf:"varint,22,opt,name=gamemode,proto3" json:"gamemode,omitempty"`
	Changed              bool  `protobuf:"varint,23,opt,name=changed,proto3" json:"changed,omitempty"`
}

func (x *Predictions) Reset() {
	*x = Predictions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Predictions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Predictions) ProtoMessage() {}

func (x *Predictions) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Predictions.ProtoReflect.Descriptor instead.
func (*Predictions) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *Predictions) GetKraljUltimo() *User {
	if x != nil {
		return x.KraljUltimo
	}
	return nil
}

func (x *Predictions) GetKraljUltimoKontra() int32 {
	if x != nil {
		return x.KraljUltimoKontra
	}
	return 0
}

func (x *Predictions) GetKraljUltimoKontraDal() *User {
	if x != nil {
		return x.KraljUltimoKontraDal
	}
	return nil
}

func (x *Predictions) GetTrula() *User {
	if x != nil {
		return x.Trula
	}
	return nil
}

func (x *Predictions) GetKralji() *User {
	if x != nil {
		return x.Kralji
	}
	return nil
}

func (x *Predictions) GetPagatUltimo() *User {
	if x != nil {
		return x.PagatUltimo
	}
	return nil
}

func (x *Predictions) GetPagatUltimoKontra() int32 {
	if x != nil {
		return x.PagatUltimoKontra
	}
	return 0
}

func (x *Predictions) GetPagatUltimoKontraDal() *User {
	if x != nil {
		return x.PagatUltimoKontraDal
	}
	return nil
}

func (x *Predictions) GetIgra() *User {
	if x != nil {
		return x.Igra
	}
	return nil
}

func (x *Predictions) GetIgraKontra() int32 {
	if x != nil {
		return x.IgraKontra
	}
	return 0
}

func (x *Predictions) GetIgraKontraDal() *User {
	if x != nil {
		return x.IgraKontraDal
	}
	return nil
}

func (x *Predictions) GetValat() *User {
	if x != nil {
		return x.Valat
	}
	return nil
}

func (x *Predictions) GetValatKontra() int32 {
	if x != nil {
		return x.ValatKontra
	}
	return 0
}

func (x *Predictions) GetValatKontraDal() *User {
	if x != nil {
		return x.ValatKontraDal
	}
	return nil
}

func (x *Predictions) GetBarvniValat() *User {
	if x != nil {
		return x.BarvniValat
	}
	return nil
}

func (x *Predictions) GetBarvniValatKontra() int32 {
	if x != nil {
		return x.BarvniValatKontra
	}
	return 0
}

func (x *Predictions) GetBarvniValatKontraDal() *User {
	if x != nil {
		return x.BarvniValatKontraDal
	}
	return nil
}

func (x *Predictions) GetGamemode() int32 {
	if x != nil {
		return x.Gamemode
	}
	return 0
}

func (x *Predictions) GetChanged() bool {
	if x != nil {
		return x.Changed
	}
	return false
}

type TalonReveal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stih []*Stih `protobuf:"bytes,1,rep,name=stih,proto3" json:"stih,omitempty"`
}

func (x *TalonReveal) Reset() {
	*x = TalonReveal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalonReveal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalonReveal) ProtoMessage() {}

func (x *TalonReveal) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalonReveal.ProtoReflect.Descriptor instead.
func (*TalonReveal) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *TalonReveal) GetStih() []*Stih {
	if x != nil {
		return x.Stih
	}
	return nil
}

type PlayingReveal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playing *User `protobuf:"bytes,1,opt,name=playing,proto3" json:"playing,omitempty"`
}

func (x *PlayingReveal) Reset() {
	*x = PlayingReveal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayingReveal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayingReveal) ProtoMessage() {}

func (x *PlayingReveal) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayingReveal.ProtoReflect.Descriptor instead.
func (*PlayingReveal) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{27}
}

func (x *PlayingReveal) GetPlaying() *User {
	if x != nil {
		return x.Playing
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{28}
}

type LoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{29}
}

func (x *LoginInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*LoginResponse_Ok
	//	*LoginResponse_Fail_
	Type isLoginResponse_Type `protobuf_oneof:"type"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30}
}

func (m *LoginResponse) GetType() isLoginResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *LoginResponse) GetOk() *LoginResponse_OK {
	if x, ok := x.GetType().(*LoginResponse_Ok); ok {
		return x.Ok
	}
	return nil
}

func (x *LoginResponse) GetFail() *LoginResponse_Fail {
	if x, ok := x.GetType().(*LoginResponse_Fail_); ok {
		return x.Fail
	}
	return nil
}

type isLoginResponse_Type interface {
	isLoginResponse_Type()
}

type LoginResponse_Ok struct {
	Ok *LoginResponse_OK `protobuf:"bytes,1,opt,name=ok,proto3,oneof"`
}

type LoginResponse_Fail_ struct {
	Fail *LoginResponse_Fail `protobuf:"bytes,2,opt,name=fail,proto3,oneof"`
}

func (*LoginResponse_Ok) isLoginResponse_Type() {}

func (*LoginResponse_Fail_) isLoginResponse_Type() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	GameId   string `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Message_Connection
	//	*Message_Licitiranje
	//	*Message_Card
	//	*Message_LicitiranjeStart
	//	*Message_GameStart
	//	*Message_LoginRequest
	//	*Message_LoginInfo
	//	*Message_LoginResponse
	//	*Message_ClearDesk
	//	*Message_Results
	//	*Message_UserList
	//	*Message_KingSelection
	//	*Message_StartPredictions
	//	*Message_Predictions
	//	*Message_TalonReveal
	//	*Message_PlayingReveal
	//	*Message_TalonSelection
	//	*Message_Stash
	//	*Message_GameEnd
	//	*Message_GameStartCountdown
	//	*Message_PredictionsResend
	//	*Message_Radelci
	Data isMessage_Data `protobuf_oneof:"data"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{31}
}

func (x *Message) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Message) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Message) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (m *Message) GetData() isMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Message) GetConnection() *Connection {
	if x, ok := x.GetData().(*Message_Connection); ok {
		return x.Connection
	}
	return nil
}

func (x *Message) GetLicitiranje() *Licitiranje {
	if x, ok := x.GetData().(*Message_Licitiranje); ok {
		return x.Licitiranje
	}
	return nil
}

func (x *Message) GetCard() *Card {
	if x, ok := x.GetData().(*Message_Card); ok {
		return x.Card
	}
	return nil
}

func (x *Message) GetLicitiranjeStart() *LicitiranjeStart {
	if x, ok := x.GetData().(*Message_LicitiranjeStart); ok {
		return x.LicitiranjeStart
	}
	return nil
}

func (x *Message) GetGameStart() *GameStart {
	if x, ok := x.GetData().(*Message_GameStart); ok {
		return x.GameStart
	}
	return nil
}

func (x *Message) GetLoginRequest() *LoginRequest {
	if x, ok := x.GetData().(*Message_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

func (x *Message) GetLoginInfo() *LoginInfo {
	if x, ok := x.GetData().(*Message_LoginInfo); ok {
		return x.LoginInfo
	}
	return nil
}

func (x *Message) GetLoginResponse() *LoginResponse {
	if x, ok := x.GetData().(*Message_LoginResponse); ok {
		return x.LoginResponse
	}
	return nil
}

func (x *Message) GetClearDesk() *ClearDesk {
	if x, ok := x.GetData().(*Message_ClearDesk); ok {
		return x.ClearDesk
	}
	return nil
}

func (x *Message) GetResults() *Results {
	if x, ok := x.GetData().(*Message_Results); ok {
		return x.Results
	}
	return nil
}

func (x *Message) GetUserList() *UserList {
	if x, ok := x.GetData().(*Message_UserList); ok {
		return x.UserList
	}
	return nil
}

func (x *Message) GetKingSelection() *KingSelection {
	if x, ok := x.GetData().(*Message_KingSelection); ok {
		return x.KingSelection
	}
	return nil
}

func (x *Message) GetStartPredictions() *StartPredictions {
	if x, ok := x.GetData().(*Message_StartPredictions); ok {
		return x.StartPredictions
	}
	return nil
}

func (x *Message) GetPredictions() *Predictions {
	if x, ok := x.GetData().(*Message_Predictions); ok {
		return x.Predictions
	}
	return nil
}

func (x *Message) GetTalonReveal() *TalonReveal {
	if x, ok := x.GetData().(*Message_TalonReveal); ok {
		return x.TalonReveal
	}
	return nil
}

func (x *Message) GetPlayingReveal() *PlayingReveal {
	if x, ok := x.GetData().(*Message_PlayingReveal); ok {
		return x.PlayingReveal
	}
	return nil
}

func (x *Message) GetTalonSelection() *TalonSelection {
	if x, ok := x.GetData().(*Message_TalonSelection); ok {
		return x.TalonSelection
	}
	return nil
}

func (x *Message) GetStash() *Stash {
	if x, ok := x.GetData().(*Message_Stash); ok {
		return x.Stash
	}
	return nil
}

func (x *Message) GetGameEnd() *GameEnd {
	if x, ok := x.GetData().(*Message_GameEnd); ok {
		return x.GameEnd
	}
	return nil
}

func (x *Message) GetGameStartCountdown() *GameStartCountdown {
	if x, ok := x.GetData().(*Message_GameStartCountdown); ok {
		return x.GameStartCountdown
	}
	return nil
}

func (x *Message) GetPredictionsResend() *Predictions {
	if x, ok := x.GetData().(*Message_PredictionsResend); ok {
		return x.PredictionsResend
	}
	return nil
}

func (x *Message) GetRadelci() *Radelci {
	if x, ok := x.GetData().(*Message_Radelci); ok {
		return x.Radelci
	}
	return nil
}

type isMessage_Data interface {
	isMessage_Data()
}

type Message_Connection struct {
	Connection *Connection `protobuf:"bytes,4,opt,name=connection,proto3,oneof"`
}

type Message_Licitiranje struct {
	Licitiranje *Licitiranje `protobuf:"bytes,5,opt,name=licitiranje,proto3,oneof"`
}

type Message_Card struct {
	Card *Card `protobuf:"bytes,6,opt,name=card,proto3,oneof"`
}

type Message_LicitiranjeStart struct {
	LicitiranjeStart *LicitiranjeStart `protobuf:"bytes,7,opt,name=licitiranje_start,json=licitiranjeStart,proto3,oneof"`
}

type Message_GameStart struct {
	GameStart *GameStart `protobuf:"bytes,8,opt,name=game_start,json=gameStart,proto3,oneof"`
}

type Message_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,9,opt,name=login_request,json=loginRequest,proto3,oneof"`
}

type Message_LoginInfo struct {
	LoginInfo *LoginInfo `protobuf:"bytes,10,opt,name=login_info,json=loginInfo,proto3,oneof"`
}

type Message_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,11,opt,name=login_response,json=loginResponse,proto3,oneof"`
}

type Message_ClearDesk struct {
	ClearDesk *ClearDesk `protobuf:"bytes,12,opt,name=clear_desk,json=clearDesk,proto3,oneof"`
}

type Message_Results struct {
	Results *Results `protobuf:"bytes,13,opt,name=results,proto3,oneof"`
}

type Message_UserList struct {
	UserList *UserList `protobuf:"bytes,14,opt,name=user_list,json=userList,proto3,oneof"`
}

type Message_KingSelection struct {
	KingSelection *KingSelection `protobuf:"bytes,15,opt,name=king_selection,json=kingSelection,proto3,oneof"`
}

type Message_StartPredictions struct {
	StartPredictions *StartPredictions `protobuf:"bytes,16,opt,name=start_predictions,json=startPredictions,proto3,oneof"`
}

type Message_Predictions struct {
	Predictions *Predictions `protobuf:"bytes,17,opt,name=predictions,proto3,oneof"`
}

type Message_TalonReveal struct {
	TalonReveal *TalonReveal `protobuf:"bytes,18,opt,name=talon_reveal,json=talonReveal,proto3,oneof"`
}

type Message_PlayingReveal struct {
	PlayingReveal *PlayingReveal `protobuf:"bytes,19,opt,name=playing_reveal,json=playingReveal,proto3,oneof"`
}

type Message_TalonSelection struct {
	TalonSelection *TalonSelection `protobuf:"bytes,20,opt,name=talon_selection,json=talonSelection,proto3,oneof"`
}

type Message_Stash struct {
	Stash *Stash `protobuf:"bytes,21,opt,name=stash,proto3,oneof"`
}

type Message_GameEnd struct {
	GameEnd *GameEnd `protobuf:"bytes,22,opt,name=game_end,json=gameEnd,proto3,oneof"`
}

type Message_GameStartCountdown struct {
	GameStartCountdown *GameStartCountdown `protobuf:"bytes,23,opt,name=game_start_countdown,json=gameStartCountdown,proto3,oneof"`
}

type Message_PredictionsResend struct {
	PredictionsResend *Predictions `protobuf:"bytes,24,opt,name=predictions_resend,json=predictionsResend,proto3,oneof"`
}

type Message_Radelci struct {
	Radelci *Radelci `protobuf:"bytes,25,opt,name=radelci,proto3,oneof"`
}

func (*Message_Connection) isMessage_Data() {}

func (*Message_Licitiranje) isMessage_Data() {}

func (*Message_Card) isMessage_Data() {}

func (*Message_LicitiranjeStart) isMessage_Data() {}

func (*Message_GameStart) isMessage_Data() {}

func (*Message_LoginRequest) isMessage_Data() {}

func (*Message_LoginInfo) isMessage_Data() {}

func (*Message_LoginResponse) isMessage_Data() {}

func (*Message_ClearDesk) isMessage_Data() {}

func (*Message_Results) isMessage_Data() {}

func (*Message_UserList) isMessage_Data() {}

func (*Message_KingSelection) isMessage_Data() {}

func (*Message_StartPredictions) isMessage_Data() {}

func (*Message_Predictions) isMessage_Data() {}

func (*Message_TalonReveal) isMessage_Data() {}

func (*Message_PlayingReveal) isMessage_Data() {}

func (*Message_TalonSelection) isMessage_Data() {}

func (*Message_Stash) isMessage_Data() {}

func (*Message_GameEnd) isMessage_Data() {}

func (*Message_GameStartCountdown) isMessage_Data() {}

func (*Message_PredictionsResend) isMessage_Data() {}

func (*Message_Radelci) isMessage_Data() {}

type LoginResponse_OK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginResponse_OK) Reset() {
	*x = LoginResponse_OK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_OK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_OK) ProtoMessage() {}

func (x *LoginResponse_OK) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_OK.ProtoReflect.Descriptor instead.
func (*LoginResponse_OK) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30, 0}
}

type LoginResponse_Fail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginResponse_Fail) Reset() {
	*x = LoginResponse_Fail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_Fail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_Fail) ProtoMessage() {}

func (x *LoginResponse_Fail) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_Fail.ProtoReflect.Descriptor instead.
func (*LoginResponse_Fail) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30, 1}
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x09, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x44, 0x65, 0x73, 0x6b, 0x22, 0x0e, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x22, 0x5d, 0x0a,
	0x07, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x24,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9b, 0x01, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6a,
	0x6f, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x4c, 0x69,
	0x63, 0x69, 0x74, 0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x4c, 0x69, 0x63, 0x69, 0x74, 0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x22, 0x9f, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x46, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xc9, 0x04, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x72, 0x75, 0x6c, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x72, 0x75,
	0x6c, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x67, 0x72, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x67, 0x72, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x61, 0x7a, 0x6c, 0x69, 0x6b, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x61, 0x7a, 0x6c, 0x69, 0x6b, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x12, 0x16, 0x0a, 0x06,
	0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x72,
	0x61, 0x6c, 0x6a, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6b, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x50, 0x61, 0x67, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x5f, 0x69, 0x67, 0x72, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6b, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x49, 0x67, 0x72, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x5f, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x4b, 0x72, 0x61, 0x6c, 0x6a, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x6f, 0x6e, 0x64, 0x66, 0x61, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x6f, 0x6e, 0x64, 0x66, 0x61, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x73, 0x68, 0x6f, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6b, 0x72,
	0x61, 0x6c, 0x6a, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x4b,
	0x72, 0x61, 0x6c, 0x6a, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x67,
	0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x61,
	0x67, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6b, 0x72, 0x61, 0x6c,
	0x6a, 0x69, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4b, 0x72,
	0x61, 0x6c, 0x6a, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x75,
	0x6c, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x72,
	0x75, 0x6c, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x65, 0x6c, 0x63, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x61, 0x64, 0x65, 0x6c, 0x63, 0x22, 0x85, 0x01, 0x0a, 0x04,
	0x53, 0x74, 0x69, 0x68, 0x12, 0x19, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x77, 0x6f, 0x72, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55,
	0x70, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x70, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x70, 0x42,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55,
	0x70, 0x42, 0x79, 0x22, 0x46, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x04, 0x73, 0x74, 0x69, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x53, 0x74, 0x69, 0x68, 0x52, 0x04, 0x73, 0x74, 0x69, 0x68, 0x22, 0x26, 0x0a, 0x09, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x4b,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x65, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x6c, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x04, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x73,
	0x68, 0x12, 0x19, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x52, 0x61, 0x64, 0x65, 0x6c, 0x63, 0x69, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x63, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x63, 0x69, 0x22, 0x93, 0x03, 0x0a, 0x10, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x5f, 0x6b,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6b, 0x72, 0x61,
	0x6c, 0x6a, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x61, 0x67, 0x61, 0x74, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x5f, 0x6b,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x61, 0x67,
	0x61, 0x74, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x67, 0x72, 0x61, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x67, 0x72, 0x61, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x4b, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x5f, 0x76, 0x61, 0x6c,
	0x61, 0x74, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x56, 0x61, 0x6c, 0x61, 0x74, 0x4b, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x61, 0x74, 0x5f, 0x75, 0x6c, 0x74, 0x69,
	0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x61, 0x74, 0x55,
	0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x6c, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x75, 0x6c, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6b,
	0x72, 0x61, 0x6c, 0x6a, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6b, 0x72, 0x61,
	0x6c, 0x6a, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x5f, 0x75, 0x6c, 0x74,
	0x69, 0x6d, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6b, 0x72, 0x61, 0x6c, 0x6a,
	0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x5f, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x56, 0x61, 0x6c, 0x61, 0x74, 0x22,
	0xa3, 0x06, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x28, 0x0a, 0x0c, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x6b, 0x72,
	0x61, 0x6c, 0x6a, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x6b, 0x72, 0x61,
	0x6c, 0x6a, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x55, 0x6c, 0x74,
	0x69, 0x6d, 0x6f, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x3c, 0x0a, 0x17, 0x6b, 0x72, 0x61,
	0x6c, 0x6a, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x5f, 0x64, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x14, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x4b, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x44, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x6c, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x74,
	0x72, 0x75, 0x6c, 0x61, 0x12, 0x1d, 0x0a, 0x06, 0x6b, 0x72, 0x61, 0x6c, 0x6a, 0x69, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x6b, 0x72, 0x61,
	0x6c, 0x6a, 0x69, 0x12, 0x28, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x61, 0x74, 0x5f, 0x75, 0x6c, 0x74,
	0x69, 0x6d, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x0b, 0x70, 0x61, 0x67, 0x61, 0x74, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x61, 0x67, 0x61, 0x74, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x5f, 0x6b, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x3c, 0x0a,
	0x17, 0x70, 0x61, 0x67, 0x61, 0x74, 0x5f, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x5f, 0x6b, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x14, 0x70, 0x61, 0x67, 0x61, 0x74, 0x55, 0x6c, 0x74, 0x69,
	0x6d, 0x6f, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x44, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x04, 0x69,
	0x67, 0x72, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x69, 0x67, 0x72, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x67, 0x72, 0x61, 0x5f, 0x6b,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x67, 0x72,
	0x61, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x2d, 0x0a, 0x0f, 0x69, 0x67, 0x72, 0x61, 0x5f,
	0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d, 0x69, 0x67, 0x72, 0x61, 0x4b, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x44, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x5f, 0x6b, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x61, 0x74,
	0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x2f, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x5f,
	0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x4b, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x44, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0c, 0x62, 0x61, 0x72, 0x76, 0x6e,
	0x69, 0x5f, 0x76, 0x61, 0x6c, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x56, 0x61, 0x6c, 0x61,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x5f, 0x76, 0x61, 0x6c, 0x61,
	0x74, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x56, 0x61, 0x6c, 0x61, 0x74, 0x4b, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x12, 0x3c, 0x0a, 0x17, 0x62, 0x61, 0x72, 0x76, 0x6e, 0x69, 0x5f, 0x76, 0x61, 0x6c, 0x61,
	0x74, 0x5f, 0x6b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x14, 0x62, 0x61, 0x72, 0x76, 0x6e,
	0x69, 0x56, 0x61, 0x6c, 0x61, 0x74, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x44, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x28, 0x0a, 0x0b, 0x54, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x65,
	0x76, 0x65, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x04, 0x73, 0x74, 0x69, 0x68, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x74, 0x69, 0x68, 0x52, 0x04, 0x73, 0x74, 0x69, 0x68, 0x22,
	0x30, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x12, 0x1f, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x21, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x75, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4f, 0x4b, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x61, 0x69, 0x6c, 0x1a, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x1a, 0x06, 0x0a, 0x04, 0x46,
	0x61, 0x69, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb3, 0x09, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4c, 0x69, 0x63, 0x69, 0x74, 0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x40, 0x0a, 0x11, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x69, 0x63, 0x69, 0x74, 0x69, 0x72, 0x61, 0x6e, 0x6a, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x69, 0x72,
	0x61, 0x6e, 0x6a, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0e, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65,
	0x73, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x73, 0x6b, 0x12,
	0x24, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x0e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4b, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x0c,
	0x74, 0x61, 0x6c, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x48, 0x00, 0x52, 0x0b, 0x74, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12,
	0x37, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0f, 0x74, 0x61, 0x6c, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x61, 0x6c, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x61, 0x6c, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x73, 0x68, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x74, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x47, 0x0a, 0x14, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00,
	0x52, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x3d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00,
	0x52, 0x11, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x61, 0x64, 0x65, 0x6c, 0x63, 0x69, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x61, 0x64, 0x65, 0x6c, 0x63, 0x69, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x61, 0x64, 0x65, 0x6c, 0x63, 0x69, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_messages_proto_goTypes = []interface{}{
	(*Connect)(nil),            // 0: Connect
	(*Disconnect)(nil),         // 1: Disconnect
	(*Receive)(nil),            // 2: Receive
	(*Send)(nil),               // 3: Send
	(*Request)(nil),            // 4: Request
	(*ClearDesk)(nil),          // 5: ClearDesk
	(*Notification)(nil),       // 6: Notification
	(*Leave)(nil),              // 7: Leave
	(*GameEnd)(nil),            // 8: GameEnd
	(*Connection)(nil),         // 9: Connection
	(*Licitiranje)(nil),        // 10: Licitiranje
	(*LicitiranjeStart)(nil),   // 11: LicitiranjeStart
	(*Card)(nil),               // 12: Card
	(*GameStartCountdown)(nil), // 13: GameStartCountdown
	(*User)(nil),               // 14: User
	(*ResultsUser)(nil),        // 15: ResultsUser
	(*Stih)(nil),               // 16: Stih
	(*Results)(nil),            // 17: Results
	(*GameStart)(nil),          // 18: GameStart
	(*UserList)(nil),           // 19: UserList
	(*KingSelection)(nil),      // 20: KingSelection
	(*TalonSelection)(nil),     // 21: TalonSelection
	(*Stash)(nil),              // 22: Stash
	(*Radelci)(nil),            // 23: Radelci
	(*StartPredictions)(nil),   // 24: StartPredictions
	(*Predictions)(nil),        // 25: Predictions
	(*TalonReveal)(nil),        // 26: TalonReveal
	(*PlayingReveal)(nil),      // 27: PlayingReveal
	(*LoginRequest)(nil),       // 28: LoginRequest
	(*LoginInfo)(nil),          // 29: LoginInfo
	(*LoginResponse)(nil),      // 30: LoginResponse
	(*Message)(nil),            // 31: Message
	(*LoginResponse_OK)(nil),   // 32: LoginResponse.OK
	(*LoginResponse_Fail)(nil), // 33: LoginResponse.Fail
}
var file_messages_proto_depIdxs = []int32{
	17, // 0: GameEnd.results:type_name -> Results
	4,  // 1: GameEnd.request:type_name -> Request
	0,  // 2: Connection.join:type_name -> Connect
	1,  // 3: Connection.disconnect:type_name -> Disconnect
	7,  // 4: Connection.leave:type_name -> Leave
	2,  // 5: Card.receive:type_name -> Receive
	3,  // 6: Card.send:type_name -> Send
	4,  // 7: Card.request:type_name -> Request
	14, // 8: ResultsUser.user:type_name -> User
	12, // 9: Stih.card:type_name -> Card
	15, // 10: Results.user:type_name -> ResultsUser
	16, // 11: Results.stih:type_name -> Stih
	14, // 12: GameStart.user:type_name -> User
	14, // 13: UserList.user:type_name -> User
	4,  // 14: KingSelection.request:type_name -> Request
	3,  // 15: KingSelection.send:type_name -> Send
	6,  // 16: KingSelection.notification:type_name -> Notification
	4,  // 17: TalonSelection.request:type_name -> Request
	3,  // 18: TalonSelection.send:type_name -> Send
	6,  // 19: TalonSelection.notification:type_name -> Notification
	12, // 20: Stash.card:type_name -> Card
	4,  // 21: Stash.request:type_name -> Request
	3,  // 22: Stash.send:type_name -> Send
	6,  // 23: Stash.notification:type_name -> Notification
	14, // 24: Predictions.kralj_ultimo:type_name -> User
	14, // 25: Predictions.kralj_ultimo_kontra_dal:type_name -> User
	14, // 26: Predictions.trula:type_name -> User
	14, // 27: Predictions.kralji:type_name -> User
	14, // 28: Predictions.pagat_ultimo:type_name -> User
	14, // 29: Predictions.pagat_ultimo_kontra_dal:type_name -> User
	14, // 30: Predictions.igra:type_name -> User
	14, // 31: Predictions.igra_kontra_dal:type_name -> User
	14, // 32: Predictions.valat:type_name -> User
	14, // 33: Predictions.valat_kontra_dal:type_name -> User
	14, // 34: Predictions.barvni_valat:type_name -> User
	14, // 35: Predictions.barvni_valat_kontra_dal:type_name -> User
	16, // 36: TalonReveal.stih:type_name -> Stih
	14, // 37: PlayingReveal.playing:type_name -> User
	32, // 38: LoginResponse.ok:type_name -> LoginResponse.OK
	33, // 39: LoginResponse.fail:type_name -> LoginResponse.Fail
	9,  // 40: Message.connection:type_name -> Connection
	10, // 41: Message.licitiranje:type_name -> Licitiranje
	12, // 42: Message.card:type_name -> Card
	11, // 43: Message.licitiranje_start:type_name -> LicitiranjeStart
	18, // 44: Message.game_start:type_name -> GameStart
	28, // 45: Message.login_request:type_name -> LoginRequest
	29, // 46: Message.login_info:type_name -> LoginInfo
	30, // 47: Message.login_response:type_name -> LoginResponse
	5,  // 48: Message.clear_desk:type_name -> ClearDesk
	17, // 49: Message.results:type_name -> Results
	19, // 50: Message.user_list:type_name -> UserList
	20, // 51: Message.king_selection:type_name -> KingSelection
	24, // 52: Message.start_predictions:type_name -> StartPredictions
	25, // 53: Message.predictions:type_name -> Predictions
	26, // 54: Message.talon_reveal:type_name -> TalonReveal
	27, // 55: Message.playing_reveal:type_name -> PlayingReveal
	21, // 56: Message.talon_selection:type_name -> TalonSelection
	22, // 57: Message.stash:type_name -> Stash
	8,  // 58: Message.game_end:type_name -> GameEnd
	13, // 59: Message.game_start_countdown:type_name -> GameStartCountdown
	25, // 60: Message.predictions_resend:type_name -> Predictions
	23, // 61: Message.radelci:type_name -> Radelci
	62, // [62:62] is the sub-list for method output_type
	62, // [62:62] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disconnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDesk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Licitiranje); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicitiranjeStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStartCountdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stih); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KingSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalonSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Radelci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPredictions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Predictions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalonReveal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayingReveal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_OK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_Fail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*GameEnd_Results)(nil),
		(*GameEnd_Request)(nil),
	}
	file_messages_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Connection_Join)(nil),
		(*Connection_Disconnect)(nil),
		(*Connection_Leave)(nil),
	}
	file_messages_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Card_Receive)(nil),
		(*Card_Send)(nil),
		(*Card_Request)(nil),
	}
	file_messages_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*KingSelection_Request)(nil),
		(*KingSelection_Send)(nil),
		(*KingSelection_Notification)(nil),
	}
	file_messages_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*TalonSelection_Request)(nil),
		(*TalonSelection_Send)(nil),
		(*TalonSelection_Notification)(nil),
	}
	file_messages_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*Stash_Request)(nil),
		(*Stash_Send)(nil),
		(*Stash_Notification)(nil),
	}
	file_messages_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*LoginResponse_Ok)(nil),
		(*LoginResponse_Fail_)(nil),
	}
	file_messages_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*Message_Connection)(nil),
		(*Message_Licitiranje)(nil),
		(*Message_Card)(nil),
		(*Message_LicitiranjeStart)(nil),
		(*Message_GameStart)(nil),
		(*Message_LoginRequest)(nil),
		(*Message_LoginInfo)(nil),
		(*Message_LoginResponse)(nil),
		(*Message_ClearDesk)(nil),
		(*Message_Results)(nil),
		(*Message_UserList)(nil),
		(*Message_KingSelection)(nil),
		(*Message_StartPredictions)(nil),
		(*Message_Predictions)(nil),
		(*Message_TalonReveal)(nil),
		(*Message_PlayingReveal)(nil),
		(*Message_TalonSelection)(nil),
		(*Message_Stash)(nil),
		(*Message_GameEnd)(nil),
		(*Message_GameStartCountdown)(nil),
		(*Message_PredictionsResend)(nil),
		(*Message_Radelci)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
